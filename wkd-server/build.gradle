plugins {
    id("org.jetbrains.kotlin.jvm") version "1.5.21"
    id("org.jetbrains.kotlin.kapt") version "1.5.21"
    id("org.jetbrains.kotlin.plugin.allopen") version "1.5.21"
    id("com.github.johnrengelman.shadow") version "7.1.0"
    id("io.micronaut.application") version "2.0.8"
}

def kotlinVersion = project.properties.get("kotlinVersion")

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.innercirclesoftware.*")
    }
}

kapt {
    arguments {
        arg("micronaut.openapi.views.spec", "redoc.enabled=false,rapidoc.enabled=false,swagger-ui.enabled=true,swagger-ui.theme=flattop")
    }
}

dependencies {
    implementation(project(":wkd-api"))
    implementation(project(":wkd-core"))

    kapt("io.micronaut:micronaut-http-validation")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut.kotlin:micronaut-kotlin-runtime")
    implementation("javax.annotation:javax.annotation-api")
    implementation("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
    runtimeOnly("ch.qos.logback:logback-classic")
    implementation("io.micronaut:micronaut-validation")
    runtimeOnly("com.fasterxml.jackson.module:jackson-module-kotlin")
    testImplementation("org.jsoup:jsoup:1.14.3")

    implementation("io.swagger.core.v3:swagger-annotations")
    kapt("io.micronaut.openapi:micronaut-openapi:3.2.0")
}


application {
    mainClass.set("com.innercirclesoftware.wkd_server.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("11")
}

tasks {
    compileKotlin {
        kotlinOptions {
            jvmTarget = "11"
        }
    }
    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "11"
        }
    }
}